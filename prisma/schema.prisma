// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  email       String        @unique
  name        String        @unique
  password    String
  posts       Post[]
  comments    Comment[]
  postLikes   PostLike[]
  CommentLike CommentLike[]
}

model Post {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  content   String     @db.LongText
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  comments  Comment[]
  postLikes PostLike[]
}

model PostLike {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int

  @@unique([userId, postId])
}

model Comment {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  content      String        @db.LongText
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  post         Post          @relation(fields: [postId], references: [id])
  postId       Int
  commentLikes CommentLike[]
}

model CommentLike {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int

  @@unique([userId, commentId])
}
